{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Usuario/Documents/tp_final/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Usuario/Documents/tp_final/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.parse-float.js\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      cryptos: [{\n        code: 'eth',\n        name: 'Ethereum'\n      }, {\n        code: 'usdt',\n        name: 'Tether'\n      }, {\n        code: 'usdc',\n        name: 'USD Coin'\n      }, {\n        code: 'sol',\n        name: 'Solana'\n      }],\n      selectedCrypto: '',\n      cryptoAmount: 0,\n      purchaseDateTime: '',\n      cryptoPrice: 0\n    };\n  },\n  watch: {\n    selectedCrypto: function selectedCrypto(newCrypto) {\n      if (newCrypto) {\n        this.fetchCryptoPrices(newCrypto);\n      }\n    },\n    cryptoAmount: function cryptoAmount(newAmount) {}\n  },\n  methods: {\n    fetchCryptoPrices: function fetchCryptoPrices(crypto) {\n      var _this = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://criptoya.com/api/letsbit/\".concat(crypto.toUpperCase(), \"/ARS/0.1\"));\n            case 3:\n              response = _context.sent;\n              _this.cryptoPrice = response.data.totalBid || 0;\n              _context.next = 10;\n              break;\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error al obtener los precios:', _context.t0);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    submitPurchase: function submitPurchase() {\n      var _this2 = this;\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var amount, userId, purchaseData, headers, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              amount = parseFloat(_this2.cryptoAmount);\n              if (_this2.selectedCrypto) {\n                _context2.next = 4;\n                break;\n              }\n              alert('Debes seleccionar una criptomoneda');\n              return _context2.abrupt(\"return\");\n            case 4:\n              if (!(!_this2.amount <= 0)) {\n                _context2.next = 7;\n                break;\n              }\n              alert('Debes ingresar una cantidad mayor a 0');\n              return _context2.abrupt(\"return\");\n            case 7:\n              if (_this2.purchaseDateTime) {\n                _context2.next = 10;\n                break;\n              }\n              alert('Debes ingresar una fecha y hora validas');\n              return _context2.abrupt(\"return\");\n            case 10:\n              userId = localStorage.getItem('userId');\n              if (userId) {\n                _context2.next = 14;\n                break;\n              }\n              alert('No se encontro el ID del usuario');\n              return _context2.abrupt(\"return\");\n            case 14:\n              purchaseData = {\n                user_id: userId,\n                action: 'purchase',\n                crypto_code: _this2.selectedCrypto,\n                crypto_amount: amount,\n                money: _this2.totalPrice,\n                datetime: _this2.purchaseDateTime\n              };\n              headers = {\n                'x-apikey': '60eb09146661365596af552f',\n                'Content-Type': 'application/json'\n              };\n              _context2.prev = 16;\n              _context2.next = 19;\n              return axios.post('https://laboratorio3-f36a.restdb.io/rest/transactions', purchaseData, {\n                headers: headers\n              });\n            case 19:\n              response = _context2.sent;\n              alert('Compra exitosa', response.data);\n              console.log('Compra exitosa', response.data);\n              _context2.next = 28;\n              break;\n            case 24:\n              _context2.prev = 24;\n              _context2.t0 = _context2[\"catch\"](16);\n              console.error('error al comprar:', _context2.t0);\n              alert('Error');\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[16, 24]]);\n      }))();\n    }\n  },\n  mounted: function mounted() {\n    if (this.selectedCrypto) {\n      this.fetchCryptoPrices(this.selectedCrypto);\n    }\n  },\n  computed: {\n    totalPrice: function totalPrice() {\n      return (this.cryptoAmount * this.cryptoPrice).toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","cryptos","code","name","selectedCrypto","cryptoAmount","purchaseDateTime","cryptoPrice","watch","newCrypto","fetchCryptoPrices","newAmount","methods","crypto","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","get","concat","toUpperCase","sent","totalBid","t0","console","error","stop","submitPurchase","_this2","_callee2","amount","userId","purchaseData","headers","_callee2$","_context2","parseFloat","alert","abrupt","localStorage","getItem","user_id","action","crypto_code","crypto_amount","money","totalPrice","datetime","post","log","mounted","computed","toFixed"],"sources":["C:\\Users\\Usuario\\Documents\\tp_final\\src\\views\\CryptoPurchase.vue"],"sourcesContent":["<template>\n    <div class=\"crypto-purchase\">\n        <h1>Comprar criptomonedas</h1>\n        <div class=\"form-container\">\n        <form @submit.prevent=\"submitPurchase\">\n            <div class=\"form-group\">\n                <label for=\"cryptoSelect\">Seleccionar criptomoneda</label>\n                <select v-model=\"selectedCrypto\" id=\"cryptoSelect\" required>\n                <option v-for=\"crypto in cryptos\" :key=\"crypto.code\" :value=\"crypto.code\">\n                {{ crypto.name }}\n                </option>\n            </select>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cryptoAmount\">Cantidad</label>\n                <input type=\"number\" v-model=\"cryptoAmount\" id=\"cryptoAmount\" required min=\"0.01\" step=\"any\" @input=\"calculateTotalPrice\" />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"cryptoSpent\">Monto a pagar (ARS)</label>\n                <input type=\"number\" :value=\"totalPrice\" id=\"cryptoSpent\" required min=\"0.01\" step=\"any\" readonly />\n            </div>\n            <div class=\"form-group\">\n                <label for=\"datetime\">Fecha y hora</label>\n                <input type=\"datetime-local\" v-model=\"purchaseDateTime\" id=\"datetime\" />\n            </div>\n            <router-link to=\"/home\" class=\"btn\">Volver</router-link>\n            <button type=\"submit\">Comprar</button>\n            <router-link to=\"/history\" class=\"btn\">Ver historial</router-link>\n        </form>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios'\n\nexport default {\n  data () {\n    return {\n      cryptos: [\n        { code: 'eth', name: 'Ethereum' },\n        { code: 'usdt', name: 'Tether' },\n        { code: 'usdc', name: 'USD Coin' },\n        { code: 'sol', name: 'Solana' }\n      ],\n      selectedCrypto: '',\n      cryptoAmount: 0,\n      purchaseDateTime: '',\n      cryptoPrice: 0\n    }\n  },\n\n  watch: {\n    selectedCrypto (newCrypto) {\n      if (newCrypto) {\n        this.fetchCryptoPrices(newCrypto)\n      }\n    },\n    cryptoAmount (newAmount) {\n    }\n  },\n\n  methods: {\n    async fetchCryptoPrices (crypto) {\n      try {\n        const response = await axios.get(`https://criptoya.com/api/letsbit/${crypto.toUpperCase()}/ARS/0.1`)\n        this.cryptoPrice = response.data.totalBid || 0\n      } catch (error) {\n        console.error('Error al obtener los precios:', error)\n      }\n    },\n\n    async submitPurchase () {\n      const amount = parseFloat(this.cryptoAmount)\n      if (!this.selectedCrypto) {\n        alert('Debes seleccionar una criptomoneda')\n        return\n      }\n      if (!this.amount <= 0) {\n        alert('Debes ingresar una cantidad mayor a 0')\n        return\n      }\n      if (!this.purchaseDateTime) {\n        alert('Debes ingresar una fecha y hora validas')\n        return\n      }\n      const userId = localStorage.getItem('userId')\n      if (!userId) {\n        alert('No se encontro el ID del usuario')\n        return\n      }\n      const purchaseData = {\n        user_id: userId,\n        action: 'purchase',\n        crypto_code: this.selectedCrypto,\n        crypto_amount: amount,\n        money: this.totalPrice,\n        datetime: this.purchaseDateTime\n      }\n      const headers = {\n        'x-apikey': '60eb09146661365596af552f',\n        'Content-Type': 'application/json'\n      }\n\n      try {\n        const response = await axios.post('https://laboratorio3-f36a.restdb.io/rest/transactions', purchaseData, { headers })\n        alert('Compra exitosa', response.data)\n        console.log('Compra exitosa', response.data)\n      } catch (error) {\n        console.error('error al comprar:', error)\n        alert('Error')\n      }\n    }\n  },\n\n  mounted () {\n    if (this.selectedCrypto) {\n      this.fetchCryptoPrices(this.selectedCrypto)\n    }\n  },\n\n  computed: {\n    totalPrice () {\n      return (this.cryptoAmount * this.cryptoPrice).toFixed(2)\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .crypto-purchase{\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 20px;\n  }\n\n  .form-container{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n  }\n\n  h1{\n    color: #333;\n    font-size: 30px;\n    margin-bottom: 50px;\n  }\n\n  input, select{\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #333;\n    border-radius: 5px;\n    font-size: 18px;\n    margin-right: 10px;\n  }\n\n  .form-group{\n    margin-bottom: 20px;\n  }\n\n  button{\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    padding: 10px 20px;\n    transition: background-color 0.5s;\n    font-size: 16px;\n  }\n  .btn{\n    display: inline-block;\n    margin-top: 20px;\n    padding: 10px 20px;\n    background-color: #007bff;\n    color: white;\n    text-decoration: none;\n    border-radius: 5px;\n    margin-right:5px;\n  }\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}